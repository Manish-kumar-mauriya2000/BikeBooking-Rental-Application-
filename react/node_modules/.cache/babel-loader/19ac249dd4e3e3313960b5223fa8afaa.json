{"ast":null,"code":"var _jsxFileName = \"D:\\\\neobikerentalbookingapp-react-FS_Team_89\\\\react\\\\src\\\\Services\\\\helperService.js\";\nimport { Redirect } from \"react-router\";\nimport apiService from \"./apiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst helperService = {\n  checkLogin: () => {\n    const isLogin = localStorage.getItem(\"email\") !== null;\n    const userRole = localStorage.getItem(\"userRole\");\n    const currentroute = window.location.pathname; // console.log(currentroute.substring(0,11));\n\n    if (!isLogin) {\n      if (currentroute !== \"/login\" || currentroute !== \"/user/signup\" || currentroute !== \"/admin/signup\" || currentroute !== \"/superadmin/login\") {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }, this);\n      }\n    }\n\n    if (userRole === \"user\") {\n      if (isLogin) {\n        if (currentroute === \"/login\" || currentroute === \"/user/signup\" || currentroute.substring(0, 6) === \"/admin\" || currentroute.substring(0, 11) === \"/superadmin\") {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/user/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 28\n          }, this);\n        }\n      }\n    } else if (userRole === \"admin\") {\n      if (isLogin) {\n        if (currentroute === \"/login\" || currentroute === \"/admin/signup\" || currentroute.substring(0, 5) === \"/user\" || currentroute.substring(0, 11) === \"/superadmin\") {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/admin/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 28\n          }, this);\n        }\n      }\n    } else if (userRole === \"superadmin\") {\n      if (isLogin) {\n        if (currentroute === \"/login\" || currentroute === \"/superadmin/login\" || currentroute.substring(0, 6) === \"/admin\" || currentroute.substring(0, 5) === \"/user\") {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/superadmin/adminList\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 28\n          }, this);\n        }\n      }\n    }\n  },\n  login: async (userobj, user, props) => {\n    props.history.push(\"/login\");\n\n    if (user) {\n      let res = await apiService.userlogin(userobj);\n\n      if (res) {\n        props.history.push(\"/user/dashboard\");\n      } else {\n        throw \"Invalid credentials Try again .\";\n      }\n\n      localStorage.setItem(\"email\", userobj.email);\n      localStorage.setItem(\"userRole\", \"user\");\n    } else {\n      let res = await apiService.adminlogin(userobj);\n\n      if (res) {\n        props.history.push(\"/admin/dashboard\");\n      } else {\n        throw \"Invalid credentials Try again .\";\n      }\n\n      localStorage.setItem(\"email\", userobj.email);\n      localStorage.setItem(\"userRole\", \"admin\");\n    }\n  },\n  superAdminLogin: async (superobj, props) => {\n    let res = await apiService.superlogin(superobj);\n\n    if (res) {\n      props.history.push(\"/superadmin/adminList\");\n    } else {\n      throw \"Invalid credentials Try again .\";\n    }\n\n    localStorage.setItem(\"email\", superobj.email);\n    localStorage.setItem(\"userRole\", \"superadmin\");\n  },\n  userSignup: async (userobj, props) => {\n    let res = await apiService.usersignup(userobj);\n\n    if (res !== \"\") {\n      props.history.push(\"/login\");\n    } else {\n      throw \"Already Email id exist.Try with another email id.\";\n    }\n  },\n  adminSignup: async (adminobj, props) => {\n    let res = await apiService.adminsignup(adminobj);\n\n    if (res !== \"\") {\n      props.history.push(\"/login\");\n    } else {\n      throw \"Already Email id exist.Try with another email id.\";\n    }\n  },\n  adminDashboard: async () => {\n    let email = localStorage.getItem(\"email\");\n    return await apiService.adminDashboard(email);\n  },\n  userDashboard: async () => {\n    return await apiService.userDashboard();\n  },\n  companyDetailWithAdminId: async compId => {\n    return await apiService.companyDetailWithAdminId(compId);\n  },\n  bikesWithAdminId: async email => {\n    // console.log(email)\n    return await apiService.bikesWithAdminId(email);\n  },\n  bikeDetailWithBikeId: async bikeID => {\n    return await apiService.bikeDetailWithBikeId(bikeID);\n  },\n  userDetailWithEmail: async () => {\n    return await apiService.userDetailsWithEmail();\n  },\n  updateUserWithId: async user => {\n    return await apiService.updateUserWithId(user);\n  },\n  userBookings: async () => {\n    return await apiService.userBookings();\n  },\n  bookBike: async bikeDetail => {\n    return await apiService.bookBike(bikeDetail);\n  }\n};\nexport default helperService;","map":{"version":3,"sources":["D:/neobikerentalbookingapp-react-FS_Team_89/react/src/Services/helperService.js"],"names":["Redirect","apiService","helperService","checkLogin","isLogin","localStorage","getItem","userRole","currentroute","window","location","pathname","substring","login","userobj","user","props","history","push","res","userlogin","setItem","email","adminlogin","superAdminLogin","superobj","superlogin","userSignup","usersignup","adminSignup","adminobj","adminsignup","adminDashboard","userDashboard","companyDetailWithAdminId","compId","bikesWithAdminId","bikeDetailWithBikeId","bikeID","userDetailWithEmail","userDetailsWithEmail","updateUserWithId","userBookings","bookBike","bikeDetail"],"mappings":"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","sourcesContent":["import { Redirect } from \"react-router\";\r\nimport apiService from \"./apiService\";\r\n\r\nconst helperService = {\r\n    checkLogin : ()=>{\r\n        const isLogin = localStorage.getItem(\"email\")!==null;\r\n        const userRole = localStorage.getItem(\"userRole\");\r\n        const currentroute = window.location.pathname;\r\n        // console.log(currentroute.substring(0,11));\r\n        if(!isLogin) {\r\n            if(currentroute!==\"/login\"||currentroute!==\"/user/signup\"||currentroute!==\"/admin/signup\"||currentroute!==\"/superadmin/login\"){\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n        }\r\n        if(userRole===\"user\"){\r\n            if(isLogin){\r\n                if(currentroute===\"/login\"||currentroute===\"/user/signup\"||currentroute.substring(0,6) ===\"/admin\"||currentroute.substring(0,11) ===\"/superadmin\"){\r\n                    return <Redirect to=\"/user/dashboard\" />\r\n                }\r\n            }\r\n        }else if(userRole===\"admin\"){\r\n            if(isLogin){\r\n                if(currentroute===\"/login\"||currentroute===\"/admin/signup\"||currentroute.substring(0,5) ===\"/user\"||currentroute.substring(0,11) ===\"/superadmin\"){\r\n                    return <Redirect to=\"/admin/dashboard\" />\r\n                }\r\n             }\r\n        }else if(userRole===\"superadmin\"){\r\n            if(isLogin){\r\n                if(currentroute===\"/login\"||currentroute===\"/superadmin/login\"||currentroute.substring(0,6) ===\"/admin\"||currentroute.substring(0,5) ===\"/user\"){\r\n                    return <Redirect to=\"/superadmin/adminList\" />\r\n                }\r\n            }\r\n        }\r\n    },\r\n    login : async (userobj,user,props)=>{\r\n        props.history.push(\"/login\");\r\n        if(user){  \r\n            let res = await  apiService.userlogin(userobj);\r\n            if(res){\r\n                props.history.push(\"/user/dashboard\");\r\n            }else{\r\n                throw \"Invalid credentials Try again .\"\r\n            }\r\n            localStorage.setItem(\"email\" ,userobj.email);\r\n            localStorage.setItem(\"userRole\" , \"user\");\r\n        }else{\r\n            let res = await  apiService.adminlogin(userobj);\r\n            if(res){\r\n                props.history.push(\"/admin/dashboard\");\r\n            }else{\r\n                throw \"Invalid credentials Try again .\"\r\n            }\r\n            localStorage.setItem(\"email\" ,userobj.email);\r\n            localStorage.setItem(\"userRole\" , \"admin\");\r\n        }\r\n    },\r\n    superAdminLogin : async(superobj,props)=>{\r\n        let res = await  apiService.superlogin(superobj);\r\n        if(res){\r\n            props.history.push(\"/superadmin/adminList\");\r\n        }else{\r\n            throw \"Invalid credentials Try again .\"\r\n        }\r\n        localStorage.setItem(\"email\" ,superobj.email);\r\n        localStorage.setItem(\"userRole\" , \"superadmin\");\r\n    },\r\n    userSignup : async (userobj,props)=>{\r\n        let res = await  apiService.usersignup(userobj);\r\n        if(res!==\"\"){\r\n            props.history.push(\"/login\");\r\n        }else{\r\n            throw \"Already Email id exist.Try with another email id.\" ;\r\n        }\r\n    },\r\n    adminSignup : async (adminobj,props)=>{\r\n        let res = await  apiService.adminsignup(adminobj);\r\n        if(res!==\"\"){\r\n            props.history.push(\"/login\");\r\n        }else{\r\n            throw \"Already Email id exist.Try with another email id.\" ;\r\n        }\r\n    },\r\n    adminDashboard : async()=>{\r\n        let email = localStorage.getItem(\"email\");\r\n        return await apiService.adminDashboard(email);\r\n    },\r\n    userDashboard: async () => {\r\n        return await apiService.userDashboard();\r\n        \r\n    },\r\n    companyDetailWithAdminId : async (compId) => {\r\n        return await apiService.companyDetailWithAdminId(compId);\r\n    },\r\n    bikesWithAdminId : async (email) => {\r\n        // console.log(email)\r\n        return await apiService.bikesWithAdminId(email);\r\n    },\r\n    bikeDetailWithBikeId : async (bikeID) => {\r\n        return await apiService.bikeDetailWithBikeId(bikeID)\r\n    },\r\n    userDetailWithEmail : async () => {\r\n        return await apiService.userDetailsWithEmail();\r\n    },\r\n    updateUserWithId : async (user) => {\r\n        return await apiService.updateUserWithId(user);\r\n    },\r\n    userBookings : async () => {\r\n        return await apiService.userBookings();\r\n    },\r\n    bookBike : async (bikeDetail) => {\r\n        return await apiService.bookBike(bikeDetail);\r\n    }\r\n};\r\nexport default helperService; "]},"metadata":{},"sourceType":"module"}